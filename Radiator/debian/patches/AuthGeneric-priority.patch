--- Radiator/Radius/AuthGeneric.pm.org	2016-08-25 09:17:59.450200028 +0200
+++ Radiator/Radius/AuthGeneric.pm	2016-08-25 09:23:48.862205583 +0200
@@ -2168,7 +2168,18 @@
 	$value = &Radius::Util::format_special($value, $p)
 	    if $self && grep $check_name eq $_, @{$self->{DynamicCheck}};
 
-	if (   $check_name eq 'Encrypted-Password' 
+	if ($check_name eq 'Realm')
+	{
+	    my ($name, $realmName) = split(/@/, $username);
+	    return ($main::REJECT, "Realm does not match")
+		unless match($self, $realmName, $check_name, $value);
+	}
+	elsif ($check_name eq 'RecvFromAddress')
+	{
+	    return ($main::REJECT, 'RecvFromAddress check failed')
+		unless match($self, &Radius::Util::inet_ntop($p->{RecvFromAddress}), $check_name, $value);
+	}
+	elsif (   $check_name eq 'Encrypted-Password' 
 	       || $check_name eq 'Crypt-Password')
 	{
 	    # EAP passwords have already been checked
@@ -2328,12 +2328,6 @@
 	    # If UseNovellNMASSequence is in use, 
 	    # This will be checked by Radius::AuthLDAP2::checkUserAttributes
 	}
-	elsif ($check_name eq 'Realm')
-	{
-	    my ($name, $realmName) = split(/@/, $username);
-	    return ($main::REJECT, "Realm does not match")
-		unless match($self, $realmName, $check_name, $value);
-	}
 	elsif ($check_name eq 'NAS-Address-Port-List')
 	{
 	    # We keep a hash of filenames we have visited. Each entry
@@ -2561,11 +2561,6 @@
 	    return ($main::REJECT, 'EAPTypeName check failed')
 		unless ($value eq $p->{EAPTypeName});
 	}
-	elsif ($check_name eq 'RecvFromAddress')
-	{
-	    return ($main::REJECT, 'RecvFromAddress check failed')
-		unless match($self, &Radius::Util::inet_ntop($p->{RecvFromAddress}), $check_name, $value);
-	}
 	elsif ($check_name eq 'RecvFromName')
 	{
 	    return ($main::REJECT, 'RecvFromName check failed')
